extends ../layout.pug

block meta
    - var title = network.hash.slice(0,6)
    - var identicon = `${http_host}/static/networks/${network.hash}.png`
    meta(property="og:title" content=`${title}`)
    meta(property="og:type" content="website")
    meta(property="og:url" content=`${http_host}/network-profiles/${network.hash}`)
    meta(property="og:image" content=`${identicon}`)

block script
    script(src="/static/timeago.js")
    script.
        jQuery(".time-ago").each((_, elm) => {
            var epoch = +elm.innerText, delta = Date.now() - epoch;

            if(delta > 60 * 60 * 24 * 1000) {
                let date = new Date(epoch);
                elm.innerText = date.toLocaleDateString() + " " + date.toLocaleTimeString();
            } else {
                elm.innerText = deltaToAgo(delta);
            }
        })
        jQuery(".user-time-zone").text(Intl.DateTimeFormat().resolvedOptions().timeZone)
        jQuery('[data-toggle="tooltip"]').tooltip()

block content
    .row.mt-4
        .col-12
            nav(aria-label="breadcrumb")
                ol.breadcrumb
                    li.breadcrumb-item 
                        a(href="/") Home
                    li.breadcrumb-item
                        a(href="/network-profiles") Networks
                    li.breadcrumb-item.active #{network.hash.slice(0, 6)}
        .col-md-3
            .card.border-0
                img.card-img-top.rounded(src=`${identicon}` alt=`LZ ${title}`)
                .card-body
                    h2.text-center
                        if(network.networkID != null)
                            span.badge.badge-success LZ##{network.networkID}
                        |
                        |
                        b #{title} 
                    a.btn.btn-light.btn-block.border-dark(href=`${http_host}/networks/${network.hash}.gz`) Download
                ul.list-group.list-group-flush
                    li.list-group-item Architecture 
                        span.float-right #{network.filters}x#{network.blocks}
                    li.list-group-item Training 
                        span.float-right #{network.training_count.abbr(4)} #{network.training_steps ? "+" + network.training_steps.abbr(3) : ""}
                    li.list-group-item Since
                        span.float-right.time-ago #{network._id.getTimestamp().getTime()}
                    li.list-group-item #{network.description}
        
        .col-md-9
            ul.nav.nav-tabs
                li.nav-item
                    a.nav-link(class={ active : matches } href=`/network-profiles/${network.hash}/matches`) Match Games
            .tab-content.pt-4
                .table-responsive
                    table.table.table-bordered.table-hover
                        caption.
                             (*) Times are displayed in #[span.user-time-zone] time zone
                        
                        //- Start Match Table
                        - if(matches)
                            thead.thead-light: tr
                                th Uploaded(*)
                                th Network Hashes
                                th Result
                                th Games
                                th SPRT
                            tbody
                            - for(let match of matches) 
                                tr
                                    td.time-ago #{match._id.getTimestamp().getTime()}
                                    td 
                                        - var title1 = `${match.network1.training_count.abbr(4)}${match.network1.training_steps ? '+' + match.network1.training_steps.abbr(3):''}`
                                        - var title2 = `${match.network2.training_count.abbr(4)}${match.network2.training_steps ? '+' + match.network2.training_steps.abbr(3):''}`
                                        a(href=`/networks/${match.network1.hash}.gz` data-toggle="tooltip" title=`${title1}`) #{match.network1.hash.slice(0,6)} 
                                        a(href=`/match-games/${match._id}` data-toggle="tooltip" title=`${match.is_test ? "Test" : "Regular"} Match`) VS 
                                        a(href=`/networks/${match.network2.hash}.gz` data-toggle="tooltip" title=`${title2}`) #{match.network2.hash.slice(0,6)} 
                                    - var winrate = match.network1_wins * 100 / (match.network1_wins + match.network1_losses);
                                    td #{match.network1_wins} : #{match.network1_losses} #[span(class={'font-weight-bold': winrate >= 55}) (#{winrate.toFixed(2)}%)]
                                    td #{match.network1_wins + match.network1_losses} / #{match.number_to_play}
                                    td.align-middle
                                        -if(match.SPRT === true)
                                            .progress
                                                .progress-bar.bg-success(style=`width:100%`) Pass
                                        -else if(match.SPRT === false)
                                            .progress
                                                .progress-bar.bg-dark(style=`width:100%`) Failed
                                        -else
                                            .progress
                                                .progress-bar.progress-bar-striped.progress-bar-animated(style=`width:${match.SPRT}%`)
